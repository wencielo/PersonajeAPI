package com.ubp.demo.services;

import java.util.List;
import java.util.ArrayList;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.ubp.demo.dto.PersonajeDTO;
import com.ubp.demo.exceptiones.ResourceNotFoundException;
import com.ubp.demo.repositories.PersonajeRepositorio;
import com.ubp.demo.models.Personaje;

@Service
public class PersonajeServicioImpl implements PersonajeServicio{

	@Autowired //Para inyectar
	private PersonajeRepositorio personajeRepositorio;
	
	//Convierto de DTO a Entidad
	private Personaje mapearDto(PersonajeDTO personajeDto) {
		
		Personaje personaje = new Personaje();
		
		personaje.setName(personajeDto.getName());
		personaje.setStatus(personajeDto.getStatus());
		personaje.setSpecies(personajeDto.getSpecies());
		personaje.setType(personajeDto.getType());
		personaje.setGender(personajeDto.getGender());
		personaje.setOrigin(personajeDto.getOrigin());
		personaje.setLocation(personajeDto.getLocation());
		personaje.setImagen(personajeDto.getImagen());
		personaje.setEpisode(personajeDto.getEpisode());
		personaje.setUrl(personajeDto.getUrl());
		personaje.setCreated(personajeDto.getCreated());
		
		return personaje;
	}
	
	//Convierto de Entidad a DTO
	private PersonajeDTO mapearEntidad(Personaje personaje) {
		
		PersonajeDTO personajeRespuesta = new PersonajeDTO();
		
		personajeRespuesta.setId(personaje.getId());
		personajeRespuesta.setName(personaje.getName());
		personajeRespuesta.setStatus(personaje.getStatus());
		personajeRespuesta.setSpecies(personaje.getSpecies());
		personajeRespuesta.setType(personaje.getType());
		personajeRespuesta.setGender(personaje.getGender());
		personajeRespuesta.setOrigin(personaje.getOrigin());
		personajeRespuesta.setLocation(personaje.getLocation());
		personajeRespuesta.setImagen(personaje.getImagen());
		personajeRespuesta.setEpisode(personaje.getEpisode());
		personajeRespuesta.setUrl(personaje.getUrl());
		personajeRespuesta.setCreated(personaje.getCreated());
		
		return personajeRespuesta;
		
	}
	
	@Override
	public PersonajeDTO crearPersonaje(PersonajeDTO personajeDto) {
		//Convierto de DTO a Entidad
		Personaje personaje = mapearDto(personajeDto);
		
		Personaje nuevoPersonaje = personajeRepositorio.save(personaje);//Esto seria como el DAO
		
		//Convierto de Entidad a DTO
		PersonajeDTO personajeRespuesta = mapearEntidad(nuevoPersonaje);			
		
		return personajeRespuesta;
	}

	@Override
	public List<PersonajeDTO> listarPersonajes() {
		List<Personaje> personajes = personajeRepositorio.findAll();
		List<PersonajeDTO> personajesDto = new ArrayList<>();
		
		//recorremos las publicaciones las mapea y las agrega a la lista como personajesDTO
		for (Personaje personaje : personajes) {
			personajesDto.add(mapearEntidad(personaje));			
		}
					
		return personajesDto;
	}

	@Override
	public PersonajeDTO buscarPersonajePorId(Integer id) {
		Personaje personaje = personajeRepositorio.findById(id).orElseThrow(() ->  new ResourceNotFoundException("publicacion","id",id));
		return mapearEntidad(personaje);//Devolveria un Personaje DTO
	}

	@Override
	public void eliminarPersonaje(Integer id) {
		// TODO Auto-generated method stub
		
	} 

}
